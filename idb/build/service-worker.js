"use strict";var precacheConfig=[["/index.html","4760c62c74630d1871517a08edb36f69"],["/static/css/main.b818711b.css","86240b3fe13281332ffe8e7ea78d153d"],["/static/js/main.94a9fed4.js","477b58088df3259a7dba0b1b70f13979"],["/static/media/Benny.3535e064.jpg","3535e0649201ecd7cac7faf67586591c"],["/static/media/Democratic-full.13f23764.png","13f237643cbdcedd691dda8d390360aa"],["/static/media/Democratic.4e99052c.png","4e99052ccaec6739bc51dd5eb9fe2c81"],["/static/media/Libertarian-full.4f44af90.png","4f44af9036ac9c5ea5106acdc605254c"],["/static/media/Libertarian.e8a161dd.png","e8a161dd37a6ad832027acaa497b7a2c"],["/static/media/Michael.d82c9e1a.png","d82c9e1a12ee49b61dfcf8ebc11a89d5"],["/static/media/Minwoo.99d4a5f2.jpg","99d4a5f27386ee92837643f20aa2ce8d"],["/static/media/Palak.790bf176.png","790bf17645a66a632b1a2f8eaf6879c2"],["/static/media/Raul.4cf170e6.png","4cf170e65e480ef65f03bcee4f9e5eb9"],["/static/media/Republican-full.6c0d0540.png","6c0d05403b44bc47fe37a6fffb550bb4"],["/static/media/Republican.e036971a.png","e036971ad0ac3a1be8bd58d4e46bcae4"],["/static/media/William.8bec30cf.jpg","8bec30cf36e9b27e545e73c79ef3132e"],["/static/media/header.1f0d0789.png","1f0d07895402a1ab2e202710f729c9af"],["/static/media/logo.5d5d9eef.svg","5d5d9eefa31e5e13a6610d9fa7a283bb"],["/static/media/pic1.ea3ab7b4.jpg","ea3ab7b402fcf4d8a7df0814a5b0e961"],["/static/media/pic2.f0514c5a.jpg","f0514c5afe713e0245f9dca276414a44"],["/static/media/pic3.e5281cef.jpg","e5281cefb12231860b8573c1a136981a"],["/static/media/slick.b7c9e1e4.woff","b7c9e1e479de3b53f1e4e30ebac2403a"],["/static/media/slick.ced611da.eot","ced611daf7709cc778da928fec876475"],["/static/media/slick.d41f55a7.ttf","d41f55a78e6f49a5512878df1737e58a"],["/static/media/slick.f97e3bbf.svg","f97e3bbf73254b0112091d0192f17aec"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,a,t,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),c=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var n=new Request(t,{credentials:"same-origin"});return fetch(n).then(function(a){if(!a.ok)throw new Error("Request for "+t+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(t,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!a.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(a=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),a=urlsToCacheKeys.has(t));var c="/index.html";!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL(c,self.location).toString(),a=urlsToCacheKeys.has(t)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});